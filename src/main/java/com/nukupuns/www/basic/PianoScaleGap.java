package com.nukupuns.www.basic;

/**
 * 音阶（scale）：全音阶，按照钢琴键盘的88个音高，从C1到C8，并将唱名和音程标明在里面
 * 音高 C    D   E   F   G    A   B
 * 标记 1    2   3   4   5    6   7
 * 唱名 do  re   mi  fa  sol  la  si
 * <p>
 * 同一使用#作为半音，并且设置起始和结束频率
 */

public enum PianoScaleGap {
    //格式为：调号（音调整数 名字 开始频率 结束频率）
    //大字2组
    A0(1, "A0", 27.500, 27.500),
    S_A0(2, "A#0", 29.135, 29.135),

    B0(3, "B0", 30.868, 30.868),
    //大字1组
    C1(4, "C1", 32.703, 30.868),
    S_C1(5, "C#1", 34.648, 30.868),
    D1(6, "D1", 36.708, 30.868),
    S_D1(7, "D#1", 38.891, 30.868),
    E1(8, "E1", 41.203, 30.868),
    F1(9, "F1", 43.654, 30.868),
    S_F1(10, "F#1", 46.249, 30.868),
    G1(11, "G1", 48.999, 30.868),
    S_G1(12, "G#1", 51.913, 30.868),
    A1(13, "A1", 55.000, 30.868),
    S_A1(14, "A#1", 58.270, 30.868),
    B1(15, "B1", 61.735, 30.868),

    //大字组
    C2(16, "C2", 65.406, 30.868),
    S_C2(17, "C#2", 69.296, 30.868),
    D2(18, "D2", 73.416, 30.868),
    S_D2(19, "D#2", 77.782, 30.868),
    E2(20, "E2", 82.407, 30.868),
    F2(21, "F2", 87.307, 30.868),
    S_F2(22, "F#2", 92.499, 30.868),
    G2(23, "G2", 97.999, 30.868),
    S_G2(24, "G#2", 103.826, 30.868),
    A2(25, "A2", 110.000, 30.868),
    S_A2(26, "A#2", 116.541, 30.868),
    B2(27, "B2", 123.471, 30.868),

    //小字组
    C3(28, "C3", 130.813, 30.868),
    S_C3(29, "C#3", 138.591, 30.868),
    D3(30, "D3", 146.832, 30.868),
    S_D3(31, "D#3", 155.563, 30.868),
    E3(32, "E3", 164.814, 30.868),
    F3(33, "F3", 174.614, 30.868),
    S_F3(34, "F#3", 184.997, 30.868),
    G3(35, "G3", 195.998, 30.868),
    S_G3(36, "G#3", 207.652, 30.868),
    A3(37, "A3", 220.000, 30.868),
    S_A3(38, "A#3", 233.082, 30.868),
    B3(39, "B3", 246.942, 30.868),

    //小字1组
    C4(40, "C4", 261.626, 30.868),
    S_C4(41, "C#4", 277.183, 30.868),
    D4(42, "D4", 293.665, 30.868),
    S_D4(43, "D#4", 311.127, 30.868),
    E4(44, "E4", 329.628, 30.868),
    F4(45, "F4", 349.228, 30.868),
    S_F4(46, "F#4", 369.994, 30.868),
    G4(47, "G4", 391.995, 30.868),
    S_G4(48, "G#4", 415.305, 30.868),
    A4(49, "A4", 440.000, 30.868),
    S_A4(50, "A#4", 466.164, 30.868),
    B4(51, "B4", 493.883, 30.868),

    //小字2组
    C5(52, "C5", 523.251, 30.868),
    S_C5(53, "C#5", 554.365, 30.868),
    D5(54, "D5", 587.330, 30.868),
    S_D5(55, "D#5", 622.254, 30.868),
    E5(56, "E5", 659.255, 30.868),
    F5(57, "F5", 698.456, 30.868),
    S_F5(58, "F#5", 739.989, 30.868),
    G5(59, "G5", 783.991, 30.868),
    S_G5(60, "G#5", 830.609, 30.868),
    A5(61, "A5", 880.000, 30.868),
    S_A5(62, "A#5", 932.328, 30.868),
    B5(63, "B5", 987.767, 30.868),

    //小字3组
    C6(64, "C6", 1046.502, 30.868),
    S_C6(65, "C#6", 1108.731, 30.868),
    D6(66, "D6", 1174.659, 30.868),
    S_D6(67, "D#6", 1244.508, 30.868),
    E6(68, "E6", 1318.510, 30.868),
    F6(69, "F6", 1396.913, 30.868),
    S_F6(70, "F#6", 1479.978, 30.868),
    G6(71, "G6", 1567.982, 30.868),
    S_G6(72, "G#6", 1661.219, 30.868),
    A6(73, "A6", 1760.000, 30.868),
    S_A6(74, "A#6", 1864.655, 30.868),
    B6(75, "B6", 1975.533, 30.868),

    //小字4组
    C7(76, "C7", 2093.005, 30.868),
    S_C7(77, "C#7", 2217.461, 30.868),
    D7(78, "D7", 2349.318, 30.868),
    S_D7(79, "D#7", 2489.016, 30.868),
    E7(80, "E7", 2637.020, 30.868),
    F7(81, "F7", 2793.826, 30.868),
    S_F7(82, "F#7", 2959.955, 30.868),
    G7(83, "G7", 3135.963, 30.868),
    S_G7(84, "G#7", 3322.438, 30.868),
    A7(85, "A7", 3520.000, 30.868),
    S_A7(86, "A#7", 3729.310, 30.868),
    B7(87, "B7", 3951.066, 30.868),

    //小字5组
    C8(88, "C8", 4186.009, 4186.009);

    private PianoScaleGap(int number, String name, double startFrequency, double endFrequency) {
        this.number = number;
        this.name = name;
        this.startFrequency = startFrequency;
        this.endFrequency = endFrequency;
    }

    private final int number; //向量整数
    private final String name;//名称
    private final double startFrequency;//起始频率
    private final double endFrequency;//结束频率

    public int getNumber() {
        return number;
    }

    public String getName() {
        return name;
    }

    public double getStartFrequency() {
        return startFrequency;
    }

    public double getEndFrequency() {
        return endFrequency;
    }

}
